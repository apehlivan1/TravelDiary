package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.Category;
import ba.unsa.etf.rpr.exceptions.AppException;

import java.util.List;

/**
 * Business Logic Layer for management of Categories
 *
 * @author Almedina Pehlivan
 */
public class CategoryManager {

    /**
     * Ensures that the specified length constraints for name are met
     * @param name
     * @throws AppException
     */
    private void validateCategoryName(String name) throws AppException {
        if (name == null || name.length() > 45 || name.length() < 3) {
            throw new AppException("Category name must be between 3 and 45 characters.");
        }
    }

    /**
     * Adding new category to database
     */
    public Category add(Category category) throws AppException {
        if (category.getId() != 0)
            throw new AppException("ID is autogenerated. Can't add category with ID.");
        validateCategoryName(category.getName());
        try {
            return DaoFactory.getCategoryDao().add(category);
        } catch (AppException e) {
            if (e.getMessage().contains("name_UNIQUE")) {
                throw new AppException("Category with the same name already exists");
            }
            throw e;
        }
    }

    /**
     * Updating a category in database
     */
    public Category update(Category category) throws AppException {
        validateCategoryName(category.getName());
        return DaoFactory.getCategoryDao().update(category);
    }

    /**
     * Looking for a category with provided id
     */
    public Category getById(int id) throws AppException {
        return DaoFactory.getCategoryDao().getById(id);
    }

    /**
     * Deleting a category with provided id
     */
    public void delete(int id) throws AppException {
        DaoFactory.getCategoryDao().delete(id);
    }

    /**
     * Getting all categories from database
     */
    public List<Category> getAll() throws AppException {
        return DaoFactory.getCategoryDao().getAll();
    }

}
