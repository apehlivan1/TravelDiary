package ba.unsa.etf.rpr.business;

import ba.unsa.etf.rpr.dao.DaoFactory;
import ba.unsa.etf.rpr.domain.User;
import ba.unsa.etf.rpr.exceptions.AppException;

import java.util.List;

/**
 * Business Logic Layer for management of Users
 *
 * @author Almedina Pehlivan
 */
public class UserManager {

    /**
     * Adding a new user to the database
     */
    public User add(User user) throws AppException {
        if (user.getId() != 0) {
            throw new AppException("ID is autogenerated. Can't add user with ID.");
        }
        try {
            return DaoFactory.getUserDao().add(user);
        } catch (AppException e) {
            if (e.getMessage().contains("username_UNIQUE")) {
                throw new AppException("This username already exists");
            }
            throw e;
        }
    }

    /**
     * Updating a user data in the database
     */
    public User update(User user) throws AppException {
        return DaoFactory.getUserDao().update(user);
    }

    /**
     * Looking for a user with the provided id
     */
    public User getById(int id) throws AppException {
        return DaoFactory.getUserDao().getById(id);
    }

    /**
     * Deleting a user with provided id
     */
    public void delete(int id) throws AppException {
        DaoFactory.getUserDao().delete(id);
    }

    /**
     * Getting all user from the database
     */
    public List<User> getAll() throws AppException {
        return DaoFactory.getUserDao().getAll();
    }

    /**
     * Searches for a user with the given username.
     */
    public User searchByUsername(String username) throws AppException {
        return DaoFactory.getUserDao().searchByUsername(username);
    }

    /**
     * Method checks the username and password against the stored user data
     * to determine if the login information is valid.
     * @return A message indicating the result of the validation
     */
    public String validateLoginInfo(String username, String password) throws AppException {
        User user = searchByUsername(username);
        if (user == null) return "Username is not valid!";
        if (!user.getPassword().equals(password)) return "Password is not correct!";
        return "Login successful";
    }
}
